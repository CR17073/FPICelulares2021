{"remainingRequest":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/node_modules/babel-loader/lib/index.js!/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/src/components/datos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/src/components/datos.vue","mtime":1637949260972},{"path":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/babel.config.js","mtime":1637372509934},{"path":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/node_modules/cache-loader/dist/cjs.js","mtime":1637372595906},{"path":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/node_modules/babel-loader/lib/index.js","mtime":1637372596910},{"path":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/node_modules/cache-loader/dist/cjs.js","mtime":1637372595906},{"path":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/node_modules/vue-loader/lib/index.js","mtime":1637372597218}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["datos.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-row style=\"width: 100%\">\n    <v-col\n    md=\"4\"\n      lg=\"3\"\n      cols=\"6\" \n      v-for=\"(cel, index) in anuncios\"\n      :key=\"index\"\n    >\n      <v-card elevation=\"15\" class=\"ma-1 mb-5\" max-height=\"350\"  max-width=\"374\" outlined\n  shaped>\n        <v-img contain height=\"250\" max-height=\"260\" :src=\"cel.imagen\" class=\"\"></v-img>\n        <v-card-title color=\"#d69e02\" style=\"background-color:#fbf383\"> \n          <v-row>\n            <v-col cols=\"12\" sm=\"6\" class=\"text-center\">\n                ${{ cel.precio }}\n            </v-col>\n            <v-col cols=\"12\" sm=\"6\" >\n              <v-btn @click=\"veranuncio(cel.id)\" color=\"#69491a\" dark small absolute right>Ver mas </v-btn>\n            </v-col>\n          </v-row>\n          </v-card-title\n        >\n        <v-card-text style=\"background-color:#fbf383\" >\n          <v-row align=\"center\" class=\"mx-0 overflow-ellipsis\">\n            <v-col cols=\"1\" sm=\"12\" >\n             <p class=\"overflow-ellipsis\"> {{ cel.descripcion }}</p>\n            </v-col>\n            </v-row>\n            </v-card-text>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport { db, st } from \"../firebase\";\nimport {bus} from \"../main\"\n\nexport default {\n  name: \"datos\",\n  props: {\n    productos: Number,\n    page: Number,\n    orden: String,\n    desde: String,\n    hasta: String,\n  },\n  data: () => ({\n    buscador:\"\",\n    estad:false,\n     marcas:[],\n    sistemas:[],\n    pantallas:[],\n    partidalCelul: [],\n    limit: 0,\n    inicio: 0,\n    contador: 0,\n    celular: {},\n    celulares: [],\n    anuncios: [],\n  }),\n  created() {\n    bus.$on(\"filtroSearch\", (data)=>{\n      \n      this.buscador=data;\n      this.filtrarPorBuscador();\n    })\n\n    bus.$on(\"cambiosEnFiltro\", (data)=>{\n      this.marcas=data.marca;\n      this.sistemas=data.sistema;\n      this.pantallas=data.pantalla;\n      this.estad=data.stat;\n      this.filtrar();\n    })\n\n    this.traerCelulares();\n  },\n  methods: {\n    async traerCelulares() {\n      this.limit = this.page * this.productos;\n      this.inicio = this.limit - this.productos;\n      this.celulares = [];\n      let this2 = this;\n\n      await db\n        .collection(\"anuncios\")\n        .orderBy(this.orden, \"desc\")\n        .get()\n        .then(async function (query) {\n          for (const doc of query.docs) {\n            let anuncio = {\n              id: doc.id,\n              precio: doc.data().precio,\n              marca: doc.data().marca,\n              descripcion: doc.data().descripcion,\n              pantalla: doc.data().tamanio,\n              sistema:doc.data().sistemaop,\n              modelo: doc.data().modelo,\n              estado:doc.data().estado,\n              imagen: await st\n                .ref()\n                .child(doc.id + \"/1.jpg\")\n                .getDownloadURL(),\n            };\n\n            this2.celulares.push(anuncio);\n          }\n        });\n      this.partidalCelul = this.celulares;\n      this.recorrerDatos();\n    },\n    recorrerDatos() {\n      this.anuncios = [];\n      for (let i = this.inicio; i < this.limit; i++) {\n        if (i < this.celulares.length) {\n          this.anuncios.push(this.celulares[i]);\n        } else {\n          break;\n        }\n      }\n    },\n    orderByPrecio() {\n      this.celulares = this.partidalCelul;\n      let datosporPrecio = [];\n      let this2 = this;\n      this.celulares.forEach(function (elemento) {\n        if (elemento.precio >= this2.desde && elemento.precio <= this2.hasta) {\n          datosporPrecio.push(elemento);\n        }\n      });\n      // if (datosporPrecio.length > 0) {\n        // this.celulares = [];\n        this.celulares = datosporPrecio;\n        console.log(this.celulares);\n        this.recorrerDatos();\n      // }\n    },\n    filtrar(){\n      let encontrados=0;\n      let filtrosActivos=[];\n      let this2=this;\n      if(this.marcas==0 && this.pantallas==0 && this.sistemas==0 && this.estad==false){\n        this.recorrerDatos();\n      }else{\n        this.celulares.forEach(function (elemento) {\n          if(this2.estad==true){\n            if(elemento.estado==\"nuevo\"){\n               encontrados=1;\n            }\n            // console.log(elemento.estado+\"-\"+)\n           \n          }\n          for(const marca of this2.marcas){\n              if(marca==elemento.marca){\n              encontrados=1;\n            }\n          }\n          for(const pantalla of this2.pantallas){\n            if(pantalla==elemento.pantalla){\n              encontrados=1;\n            }\n          }\n          for(const sistema of this2.sistemas){\n            if(sistema==elemento.sistema){\n              encontrados=1;\n            }\n          }\n          if(encontrados==1){\n          filtrosActivos.push(elemento);\n          }\n\n       \n          encontrados=0;\n        });\n      \n        this.anuncios=filtrosActivos;\n      \n      }\n       \n     \n    },\n    filtrarPorBuscador(){\n      let coincidencias=[];\n      let this2=this;\n      if(this.buscador===\"\"){\n        this.recorrerDatos();\n      }else{\n          this.celulares.forEach(function (elemento) {\n            // console.log(elemento);\n            // console.log(this2.buscador+\"-\"+elemento.modelo)\n         if(this2.buscador===elemento.modelo){\n           coincidencias.push(elemento);\n         }\n          });\n      }\n      if(coincidencias.length>0){\n        // console.log(\"entra\")\n        this.anuncios=coincidencias;\n      }else{\n        // console.log(\"no entra\")\n          this.recorrerDatos();\n      }\n\n    },\n    veranuncio(id){\n        this.$router.push(\"anuncio/\"+id);\n    }\n  },\n  watch: {\n    productos: function (val) {\n      // this.anuncios = [];\n      console.log(val);\n      this.traerCelulares();\n    },\n    page: function (val) {\n      // this.anuncios = [];\n      console.log(val);\n      this.traerCelulares();\n    },\n    orden: function (val) {\n      this.traerCelulares();\n      console.log(val);\n    },\n    hasta: function (val) {\n      if (this.hasta > 0) {\n         let resta=val-this.desde;\n        if (resta>0) {\n  \n          this.orderByPrecio();\n        } else {\n          console.log(val);\n        }\n      }\n    },\n    desde: function (val) {\n      if (this.hasta > 0) {\n        let resta=this.hasta-val;\n        if (resta>0) {\n          this.orderByPrecio();\n        } else {\n          console.log(val);\n        }\n      }\n    },\n  },\n};\n</script>\n<style scoped>\np {\n  /* BOTH of the following are required for text-overflow */\n  white-space: nowrap;\n  overflow: hidden;\n}\n  .overflow-ellipsis {\n  text-overflow: ellipsis;\n}\n</style>"],"sourceRoot":"src/components"}]}