{"remainingRequest":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/src/components/datos.vue?vue&type=style&index=0&id=7a9a7e5b&scoped=true&lang=css&","dependencies":[{"path":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/src/components/datos.vue","mtime":1637854660079},{"path":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/node_modules/css-loader/dist/cjs.js","mtime":1637372596514},{"path":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1637372597630},{"path":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/node_modules/postcss-loader/src/index.js","mtime":1637372596874},{"path":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/node_modules/cache-loader/dist/cjs.js","mtime":1637372595906},{"path":"/home/kevin/Universidad/FPI/gitHubProyect/fpiFinal/fpi_project/node_modules/vue-loader/lib/index.js","mtime":1637372597218}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCnAgewogIC8qIEJPVEggb2YgdGhlIGZvbGxvd2luZyBhcmUgcmVxdWlyZWQgZm9yIHRleHQtb3ZlcmZsb3cgKi8KICB3aGl0ZS1zcGFjZTogbm93cmFwOwogIG92ZXJmbG93OiBoaWRkZW47Cn0KICAub3ZlcmZsb3ctZWxsaXBzaXMgewogIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwp9Cg=="},{"version":3,"sources":["datos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"datos.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-row style=\"width: 100%\">\n    <v-col\n    md=\"4\"\n      lg=\"3\"\n      cols=\"6\" \n      v-for=\"(cel, index) in anuncios\"\n      :key=\"index\"\n    >\n      <v-card elevation=\"6\" class=\"ma-1\" max-height=\"350\"  max-width=\"374\">\n        <v-img contain height=\"250\" max-height=\"260\" :src=\"cel.imagen\" class=\"\"></v-img>\n        <v-card-title >\n          <v-row>\n            <v-col cols=\"12\" >\n              <v-btn @click=\"veranuncio(cel.id)\" color=\"#4a148c\" dark small absolute right>Ver mas </v-btn>\n          ${{ cel.precio }}\n            </v-col>\n          </v-row>\n          </v-card-title\n        >\n        <v-card-text>\n          <v-row align=\"center\" class=\"mx-0 overflow-ellipsis\">\n            <v-col cols=\"12\">\n             <p class=\"overflow-ellipsis\"> {{ cel.descripcion }}</p>\n            </v-col>\n            </v-row>\n            </v-card-text>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport { db, st } from \"../firebase\";\nimport {bus} from \"../main\"\n\nexport default {\n  name: \"datos\",\n  props: {\n    productos: Number,\n    page: Number,\n    orden: String,\n    desde: String,\n    hasta: String,\n  },\n  data: () => ({\n    buscador:\"\",\n     marcas:[],\n    sistemas:[],\n    pantallas:[],\n    partidalCelul: [],\n    limit: 0,\n    inicio: 0,\n    contador: 0,\n    celular: {},\n    celulares: [],\n    anuncios: [],\n  }),\n  created() {\n    bus.$on(\"filtroSearch\", (data)=>{\n      \n      this.buscador=data;\n      this.filtrarPorBuscador();\n    })\n\n    bus.$on(\"cambiosEnFiltro\", (data)=>{\n      this.marcas=data.marca;\n      this.sistemas=data.sistema;\n      this.pantallas=data.pantalla;\n      this.filtrar();\n    })\n\n    this.traerCelulares();\n  },\n  methods: {\n    async traerCelulares() {\n      this.limit = this.page * this.productos;\n      this.inicio = this.limit - this.productos;\n      this.celulares = [];\n      let this2 = this;\n\n      await db\n        .collection(\"anuncios\")\n        .orderBy(this.orden, \"desc\")\n        .limit(this.limit)\n        .get()\n        .then(async function (query) {\n          for (const doc of query.docs) {\n            let anuncio = {\n              id: doc.id,\n              precio: doc.data().precio,\n              marca: doc.data().marca,\n              descripcion: doc.data().descripcion,\n              pantalla: doc.data().tamanio,\n              sistema:doc.data().sistemaop,\n              modelo: doc.data().modelo,\n              imagen: await st\n                .ref()\n                .child(doc.id + \"/1.jpg\")\n                .getDownloadURL(),\n            };\n\n            this2.celulares.push(anuncio);\n          }\n        });\n      this.partidalCelul = this.celulares;\n      this.recorrerDatos();\n    },\n    recorrerDatos() {\n      this.anuncios = [];\n      for (let i = this.inicio; i < this.limit; i++) {\n        if (i < this.celulares.length) {\n          this.anuncios.push(this.celulares[i]);\n        } else {\n          break;\n        }\n      }\n    },\n    orderByPrecio() {\n      this.celulares = this.partidalCelul;\n      let datosporPrecio = [];\n      let this2 = this;\n      this.celulares.forEach(function (elemento) {\n        if (elemento.precio >= this2.desde && elemento.precio <= this2.hasta) {\n          datosporPrecio.push(elemento);\n        }\n      });\n      // if (datosporPrecio.length > 0) {\n        // this.celulares = [];\n        this.celulares = datosporPrecio;\n        console.log(this.celulares);\n        this.recorrerDatos();\n      // }\n    },\n    filtrar(){\n      let encontrados=0;\n      let filtrosActivos=[];\n      let this2=this;\n      if(this.marcas==0 && this.pantallas==0 && this.sistemas==0){\n        this.recorrerDatos();\n      }else{\n        this.celulares.forEach(function (elemento) {\n          for(const marca of this2.marcas){\n              if(marca==elemento.marca){\n              encontrados=1;\n            }\n          }\n          for(const pantalla of this2.pantallas){\n            if(pantalla==elemento.pantalla){\n              encontrados=1;\n            }\n          }\n          for(const sistema of this2.sistemas){\n            if(sistema==elemento.sistema){\n              encontrados=1;\n            }\n          }\n          if(encontrados==1){\n          filtrosActivos.push(elemento);\n          }\n\n       \n          encontrados=0;\n        });\n      \n        this.anuncios=filtrosActivos;\n      \n      }\n       \n     \n    },\n    filtrarPorBuscador(){\n      let coincidencias=[];\n      let this2=this;\n      if(this.buscador===\"\"){\n        this.recorrerDatos();\n      }else{\n          this.celulares.forEach(function (elemento) {\n            // console.log(elemento);\n            // console.log(this2.buscador+\"-\"+elemento.modelo)\n         if(this2.buscador===elemento.modelo){\n           coincidencias.push(elemento);\n         }\n          });\n      }\n      if(coincidencias.length>0){\n        // console.log(\"entra\")\n        this.anuncios=coincidencias;\n      }else{\n        // console.log(\"no entra\")\n          this.recorrerDatos();\n      }\n\n    },\n    veranuncio(id){\n        this.$router.push(\"anuncio/\"+id);\n    }\n  },\n  watch: {\n    productos: function (val) {\n      // this.anuncios = [];\n      console.log(val);\n      this.traerCelulares();\n    },\n    page: function (val) {\n      // this.anuncios = [];\n      console.log(val);\n      this.traerCelulares();\n    },\n    orden: function (val) {\n      this.traerCelulares();\n      console.log(val);\n    },\n    hasta: function (val) {\n      if (this.hasta > 0) {\n         let resta=val-this.desde;\n        if (resta>0) {\n  \n          this.orderByPrecio();\n        } else {\n          console.log(val);\n        }\n      }\n    },\n    desde: function (val) {\n      if (this.hasta > 0) {\n        let resta=this.hasta-val;\n        if (resta>0) {\n          this.orderByPrecio();\n        } else {\n          console.log(val);\n        }\n      }\n    },\n  },\n};\n</script>\n<style scoped>\np {\n  /* BOTH of the following are required for text-overflow */\n  white-space: nowrap;\n  overflow: hidden;\n}\n  .overflow-ellipsis {\n  text-overflow: ellipsis;\n}\n</style>"]}]}